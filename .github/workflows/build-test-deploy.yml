name: Build Test and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  PROJECT_VERSION: "1.0.0"

jobs:
  build:
    name: Build and Cache Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Before Checkout
        run: ls
    
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: After Checkout
        run: ls
        
      - name: Project Version
        run: echo $PROJECT_VERSION
        
      - name: Setup Java JDK
        uses: actions/setup-java@v4.5.0
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Cache
        uses: actions/cache@v4.1.2
        with:
          path: ${{ github.workspace }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build project with Maven
        run: mvn clean package -DskipTests -Djar.finalName=helloworld-$PROJECT_VERSION
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          # Artifact name
          name: helloworld-${{ env.PROJECT_VERSION }}.jar
          # A file, directory or wildcard pattern that describes what to upload
          path: /home/runner/work/helloworld-java/helloworld-java/target/helloworld-${{ env.PROJECT_VERSION }}.jar
  
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true

    steps:
      - name: Before Checkout
        run: ls
    
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: After Checkout
        run: ls
        
      - name: Project Version
        run: echo $PROJECT_VERSION
        
      - name: Setup Java JDK
        uses: actions/setup-java@v4.5.0
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Cache
        uses: actions/cache@v4.1.2
        with:
          path: ${{ github.workspace }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Test with Maven
        run: mvn test
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/.m2/repository"
  
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
          name: helloworld-${{ env.PROJECT_VERSION }}.jar

      - name: Deploy to production
        run: echo "Deploying application..."
